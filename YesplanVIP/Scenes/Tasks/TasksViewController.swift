//
//  TasksViewController.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 13/08/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TasksDisplayLogic: class
{
  func displaySomething(viewModel: TasksTab.Something.ViewModel)
}

class TasksViewController: UIViewController, UICollectionViewDelegateFlowLayout, TasksDisplayLogic
{
  var interactor: TasksBusinessLogic?
  var router: (NSObjectProtocol & TasksRoutingLogic & TasksDataPassing)?
    var v = TasksTabView()
    var displayedTasks: [TasksTab.Something.ViewModel.DisplayedTask] = []
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    print("TasksViewController setup")

    let viewController = self
    let interactor = TasksInteractor()
    let presenter = TasksPresenter()
    let router = TasksRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
//  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
//  {
//    if let scene = segue.identifier {
//      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
//      if let router = router, router.responds(to: selector) {
//        router.perform(selector, with: segue)
//      }
//    }
//  }
//
  // MARK: View lifecycle
    override func loadView() { view = v }

  override func viewDidLoad()
  {
    super.viewDidLoad()
    print("TasksViewController viewDidLoad")

    doSomething()
    
    v.refreshControl.addTarget(self, action: #selector(refresh), for: .valueChanged)
    v.collectionView.dataSource = self
  }
    
//    override func viewWillAppear(_ animated: Bool) {
//            super.viewWillAppear(animated)
//            doSomething()
//            
//            v.refreshControl.addTarget(self, action: #selector(refresh), for: .valueChanged)
//            v.collectionView.dataSource = self
//            print("v.collectionView.dataSource: ", v.collectionView.dataSource)
//        }
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
    
    @objc private func refresh() {
        print("refresh")
        doSomething()
    }
    
  func doSomething()
  {
    print("TasksViewController doSomething")

    let request = TasksTab.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: TasksTab.Something.ViewModel)
  {
    print("TasksViewController displaySomething")

    displayedTasks = viewModel.displayedTasks
     self.v.collectionView.reloadData()
    print("TasksViewController reloadData()", self.v.collectionView)

    self.v.refreshControl.endRefreshing()
  }
}
