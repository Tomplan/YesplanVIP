//
//  TasksDetailInteractor.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 11/11/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TasksDetailBusinessLogic
{
  func doSomething(request: TasksDetail.Something.Request)
}

protocol TasksDetailDataStore
{
    var id: String! { get set }
    var name: String! { get set }

}

class TasksDetailInteractor: TasksDetailBusinessLogic, TasksDetailDataStore
{
      var presenter: TasksDetailPresentationLogic?
      var worker: TasksDetailWorker?
      var id: String!
      var name: String!

  // MARK: Do something
  
  func doSomething(request: TasksDetail.Something.Request)
  {
    worker = TasksDetailWorker()
    worker?.getTask(id)
        .done { result in
            print("TaskDetailWorker")
            self.name = result.name
            let response = TasksDetail.Something.Response(task: result)
            self.presenter?.presentSomething(response: response)
            }
    .catch { error in
        print("error")
    //          let response = TasksTab.Something.Response(
    //              event: self.,
    //              statuses: self.statusesArray,
    //              profiles: self.profilesArray,
    //              error: error.localizedDescription
    //          )
    //          self.presenter?.presentTasks(response: response)
        }
//    .execute(onSuccess:
//        { event in
//            self.name = event.name
//            let response = TasksDetail.Something.Response(event: event)
//            self.presenter?.presentSomething(response: response)
//        }, onFailure: { error in
//            print(error)
//        })
    }
}
