//
//  TasksDetailViewController.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 11/11/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TasksDetailDisplayLogic: class
{
  func displaySomething(viewModel: TasksDetail.Something.ViewModel)
}

class TasksDetailViewController: UIViewController, UICollectionViewDelegateFlowLayout, TasksDetailDisplayLogic
{
  var interactor: TasksDetailBusinessLogic?
  var router: (NSObjectProtocol & TasksDetailRoutingLogic & TasksDetailDataPassing)?
    var v = TasksDetailView()
    var displayedTasks: [TasksDetail.Something.ViewModel.TaskDetail] = [TasksDetail.Something.ViewModel.TaskDetail(header: String(), rows: [String()])]

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = TasksDetailInteractor()
    let presenter = TasksDetailPresenter()
    let router = TasksDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
//  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
//  {
//    if let scene = segue.identifier {
//      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
//      if let router = router, router.responds(to: selector) {
//        router.perform(selector, with: segue)
//      }
//    }
//  }
  
  // MARK: View lifecycle
    override func loadView() {
        print("Task Detail loadView")
        view = v }

  override func viewDidLoad()
  {
    super.viewDidLoad()
    print("Task Detail viewDidLoad")

    doSomething()
    v.refreshControl.addTarget(self, action: #selector(refresh), for: .valueChanged)
    v.collectionView.dataSource = self
    v.collectionView.delegate = self
  }
    @objc private func refresh() {
        print("Task Detail refresh")

        doSomething()
    }
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    print("Task Detail doSomething")
    let request = TasksDetail.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: TasksDetail.Something.ViewModel)
  {
    print("Task Detail displaySomething")

    displayedTasks = viewModel.sections
    self.v.collectionView.reloadData()
    self.v.refreshControl.endRefreshing()
    
    }
}
