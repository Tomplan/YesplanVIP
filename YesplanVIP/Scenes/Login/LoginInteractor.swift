//
//  LoginInteractor.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 14/08/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Foundation
import NetworkRequestKit
import SwiftyJSON
import Alamofire
import PromiseKit
import ws
import Arrow
import then

protocol LoginBusinessLogic
{
  func loginPressed(request: Login.EnterLogin.Request)
    
}

protocol LoginDataStore
{
  var basic: Basic! { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var basic: Basic!
    
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
    var events = Events()
  
  // MARK: Do something
    
    func loginPressed(request: Login.EnterLogin.Request) {
      
        let companyUrl = request.companyURL
        let apiKey = request.apiKey
        
        let urlComponents = NSURLComponents()
        urlComponents.scheme = "https";
        urlComponents.host = "\(companyUrl!)";
        urlComponents.path = "/api/events";
        urlComponents.query = "api_key=\(apiKey!)";
        
        var url = try? urlComponents.url!.asURL()
//        print("url: ", url!)
        
    worker = LoginWorker()
        
        if worker?.verifyUrl(urlString: "\(String(describing: url!))") == true {
            
            urlComponents.path = ""
            urlComponents.query = nil
            
            url = try? urlComponents.url!.asURL()

            let base = Basic()
            base.ws = WS("\(String(describing: url!))")
            
            basic = base
            print(basic.ws.baseURL)
            
            let response = Login.EnterLogin.Response(success: true)
            presenter?.presentSomething(response: response)
        } else {
            print("no valid url")
            let response = Login.EnterLogin.Response(success: false)            
            presenter?.presentSomething(response: response)
            return
        }
    }
}
