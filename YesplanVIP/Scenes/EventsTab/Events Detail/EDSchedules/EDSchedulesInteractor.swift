//
//  EDSchedulesInteractor.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 11/11/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EDSchedulesBusinessLogic
{
  func doSomething(request: EDSchedules.Something.Request)
}

protocol EDSchedulesDataStore
{
  var id: String! { get set }
}

class EDSchedulesInteractor: EDSchedulesBusinessLogic, EDSchedulesDataStore
{
  var presenter: EDSchedulesPresentationLogic?
  var worker: EDSchedulesWorker?
  var id: String!
  
  // MARK: Do something
  
  func doSomething(request: EDSchedules.Something.Request)
  {
    worker = EDSchedulesWorker()
    worker?.getEventSchedule(id)
        .done { result in
            let response = EDSchedules.Something.Response(eventSchedule: result)
            self.presenter?.presentSomething(response: response)
        }
        .catch { error in
                        let alert = UIAlertController(title: "Error", message: error.localizedDescription, preferredStyle: .alert)
                        alert.addAction(UIAlertAction(title: "Dismiss", style: .default, handler: nil))
        }
//        .execute(onSuccess: { eventSchedule in
//        let response = EDSchedules.Something.Response(eventSchedule: eventSchedule)
//        self.presenter?.presentSomething(response: response)
//        }, onFailure: { error in
//            print(error)
//        })
  }
}
