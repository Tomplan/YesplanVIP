//
//  EDResourcesPresenter.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 11/11/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EDResourcesPresentationLogic
{
    func presentSomething(response: EDResources.Something.Response)
}

class EDResourcesPresenter: EDResourcesPresentationLogic
{
    weak var viewController: EDResourcesDisplayLogic?
    var sections : [EDResources.Something.ViewModel.Section] = []
    
    // MARK: Do something
    
    func presentSomething(response: EDResources.Something.Response)
    {
        for dict in response.dictionary {
            var header: String = String()
            if let x = dict.key {
                header = x
            }
            var rows: [EDResources.Something.ViewModel.Section.Row] = []
            
            let x = dict.value
            
            for i in 0 ..< x.count {
                let resourcebooking = x[i]
                switch resourcebooking {
                case .bulkResourceUse(_):
                    let row = EDResources.Something.ViewModel.Section.Row(resourcebooking: resourcebooking)
                    rows.append(row)
                case .freeFormResourceUse(_):
                    let row = EDResources.Something.ViewModel.Section.Row(resourcebooking: resourcebooking)
                    rows.append(row)
                case .instantiableResourceUse(_):
                    let row = EDResources.Something.ViewModel.Section.Row(resourcebooking: resourcebooking)
                    rows.append(row)
                case .instantiableResourceUseGroup(_):
                    let row = EDResources.Something.ViewModel.Section.Row(resourcebooking: resourcebooking)
                    rows.append(row)
                case .resourceSetUse(_):
                    let row = EDResources.Something.ViewModel.Section.Row(resourcebooking: resourcebooking)
                    rows.append(row)
                    
                }
            }
            let section = EDResources.Something.ViewModel.Section(
                header: header
                ,rows: rows
            )
            sections.append(section)
        }
        let viewModel = EDResources.Something.ViewModel(sections: sections)
        viewController?.displaySomething(viewModel: viewModel)
    }
}
