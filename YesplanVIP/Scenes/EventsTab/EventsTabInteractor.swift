//
//  EventsTabInteractor.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 22/08/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ws
import then

protocol EventsTabBusinessLogic
{
  func doSomething(request: EventsTab.Something.Request)
//     var basic: Basic? { get set }
}

protocol EventsTabDataStore
{
//    var basic: Basic? { get set }
//    var baseKey: String? { get set }
}

class EventsTabInteractor: EventsTabBusinessLogic, EventsTabDataStore
{
    
//    var basic: Basic?
//    var baseKey: String?
  var presenter: EventsTabPresentationLogic?
  var worker: EventsTabWorker?
    
    var events: Events = Events()
    var event: Event = Event()
    var groups: Groups = Groups()
    var group: Group = Group()
    
  // MARK: Do something
  
  func doSomething(request: EventsTab.Something.Request)
  {
    worker = EventsTabWorker()
    worker?.doSomeWork()

    let base = Basic()
    base.ws = WS(UserDefaults.standard.string(forKey: "URL")!)

    base.getAll(events).then { events in
            self.events = events
                    }.onError { e in
                        // An error occured :/
                        print(e)
                    }.finally {
            //            // In any case, reload the tableView
            //            //                print(self.events)
            //            //                print("data: ", self.events.data)
                        print("pagination: ", self.events.pagination)
//                        for event in self.events.data {
//                            print("id: ", event.id)
//                        }
                    }
   

    let response = EventsTab.Something.Response()
    presenter?.presentSomething(response: response)
  }
}
