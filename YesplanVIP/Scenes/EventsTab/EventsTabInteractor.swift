//
//  EventsTabInteractor.swift
//  YesplanVIP
//
//  Created by Techcc - FOH - Video on 22/08/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ws
import then

protocol EventsTabBusinessLogic
{
  func doSomething(request: EventsTab.Something.Request) // -> Promise<EventsTab.Something.Response>
//     var basic: Basic? { get set }
}

protocol EventsTabDataStore
{
//    var events: [Event] { get }

//    var basic: Basic? { get set }
//    var baseKey: String? { get set }
}

class EventsTabInteractor: EventsTabBusinessLogic, EventsTabDataStore
{
    
//    var basic: Basic?
//    var baseKey: String?
  var presenter: EventsTabPresentationLogic?
  var worker: EventsTabWorker?
    
    var fetchedEvents: Events = Events()
    var events: [Event] = []
//    var events: [Event] = []
    var yesplan: Yesplan = Yesplan()
  // MARK: Do something
  
  func doSomething(request: EventsTab.Something.Request) // -> Promise<EventsTab.Something.Response>
  {
    worker = EventsTabWorker()
    worker?.getDates().then { dates in
        print("dates:", dates)
//        let untillDate = date
        self.worker?.getStatuses().then { statuses in
            print("statuses: ", statuses)
        
//        self.yesplan.getAll(self.fetchedEvents).then { result in
            self.yesplan.getAll(self.fetchedEvents, query: "event:date:#nextYear").then { result in
            print("result: ", result)
            self.fetchedEvents = result
            }.onError { e in print(e)
            }.finally {
                
                
                self.events = self.fetchedEvents.data
                let response = EventsTab.Something.Response(events: self.events)
                //            print("response: ", response)
                self.presenter?.presentEvents(response: response)
                
                print("pagination: ", self.fetchedEvents.pagination )
                self.yesplan.getMore(self.fetchedEvents, paginationNext: self.fetchedEvents.pagination.next!).then { more in
                    print("more", more.pagination)
                }
        }
    }
    
    
        
        //    yesplan.getAll(events).then { events in
        //            self.events = events
        //                    }.onError { e in
        //                        print(e)
        //
        //                    }.finally {
        //            //            // In any case, reload the tableView
        //            //            //                print(self.events)
        //            //            //                print("data: ", self.events.data)
        ////                        for event in self.events.data {
        ////                            print("id: ", event.id)
        ////                        }
        ////                        let eventsMore = Events()
        ////                        let paginationNext = self.events.pagination.next!
        //
        ////                        self.yesplan.getMore(eventsMore, paginationNext: paginationNext).then { events in
        ////                            print(events)
        ////                        }
        //
        //                    }
    }
    
  }
}
